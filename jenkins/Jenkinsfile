node {
    def app

    stage('Clone repository') {
        /* Let's make sure we have the repository cloned to our workspace */

        checkout scm
    }
    stage('SonarQube analysis') {
        def sonarqubeScannerHome = tool name: 'SonarQubeScanner'

        withSonarQubeEnv('SonarQube') {
            sh "${sonarqubeScannerHome}/bin/sonar-scanner"
        }
    }
    stage('Build UI') {
        docker.image('docker.registry/maven:3.5-alpine').inside('-v $HOME/.m2:/root/.m2') {
            sh 'mvn clean compile package spring-boot:repackage -U '
        }
    }

    stage('Build image') {
        /* This builds the actual image; synonymous to
         * docker build on the command line */

        app = docker.build('docker.registry/uaas-java')
    }

    stage('Push image') {
        /* Finally, we'll push the image into Docker Hub */

        docker.withRegistry('http://docker.registry', 'docker-registry-credentials') {
            app.push("latest")
        }
    }
}